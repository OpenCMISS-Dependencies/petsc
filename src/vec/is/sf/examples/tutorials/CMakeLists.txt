add_executable(run_vec_is_sf_tutorials_1 ex1.c)
target_link_libraries(run_vec_is_sf_tutorials_1 petsc)
ADDTEST(vec_is_sf_tutorials_1_np4_1 4 run_vec_is_sf_tutorials_1 output/ex1_1_basic.out "-test_bcast -sf_type basic  ")
ADDTEST(vec_is_sf_tutorials_1_np4_2 4 run_vec_is_sf_tutorials_1 output/ex1_2_basic.out "-test_reduce -sf_type basic ")
ADDTEST(vec_is_sf_tutorials_1_np4_3 4 run_vec_is_sf_tutorials_1 output/ex1_3_basic.out "-test_degree -sf_type basic  ")
ADDTEST(vec_is_sf_tutorials_1_np4_4 4 run_vec_is_sf_tutorials_1 output/ex1_4_basic.out "-test_gather -sf_type basic  ")
ADDTEST(vec_is_sf_tutorials_1_np4_5 4 run_vec_is_sf_tutorials_1 output/ex1_5_basic.out "-test_scatter -sf_type basic  ")
ADDTEST(vec_is_sf_tutorials_1_np4_6 4 run_vec_is_sf_tutorials_1 output/ex1_6_basic.out "-test_embed -sf_type basic ")
ADDTEST(vec_is_sf_tutorials_1_np4_7 4 run_vec_is_sf_tutorials_1 output/ex1_7_basic.out "-test_invert -sf_type basic ")
add_executable(run_vec_is_sf_tutorials_2 ex2.c)
target_link_libraries(run_vec_is_sf_tutorials_2 petsc)
ADDTEST(vec_is_sf_tutorials_2_np2 2 run_vec_is_sf_tutorials_2 output/ex2_basic.out "-sf_type basic ")
ADDTEST(vec_is_sf_tutorials_2_np2_v1 2 run_vec_is_sf_tutorials_2 output/ex2_window.out "-sf_type window ")
