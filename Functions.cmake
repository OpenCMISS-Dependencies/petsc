# Tries to compile given source code (of given type) and 
function(trycompile RES_VAR INCS CODE EXT)
    message(STATUS "Compiling code to check for ${RES_VAR}")
    SET(BINDIR ${CMAKE_CURRENT_BINARY_DIR}/trycompile)
    file(MAKE_DIRECTORY ${BINDIR})
    STRING(RANDOM LENGTH 6 SALT)
    SET(SOURCEFILE ${BINDIR}/trycompile_${SALT}.${EXT})
    if (EXT STREQUAL "c" OR EXT STREQUAL "cpp")
        SET(STUB "@INCS@\nint main(int argc, char **argv) {\n@CODE@\nreturn 0;\n}")
    elseif()
        message(FATAL_ERROR "Not implemented")
    endif()
    file(WRITE ${SOURCEFILE} "${STUB}")
    configure_file(${SOURCEFILE} ${SOURCEFILE} @ONLY)
    try_compile(RESULT_VAR ${BINDIR}
            SOURCES ${SOURCEFILE}
            ${ARGN})
    set(${RES_VAR} ${RESULT_VAR} PARENT_SCOPE)
    message(STATUS "Compiling code to check for ${RES_VAR} .. ${RESULT_VAR}")
    file(REMOVE ${SOURCEFILE})
endfunction()

include(CheckFunctionExists)
function(checkexists RES_VAR FUNC)
    message(STATUS "Checking if ${FUNC} exists")
    if (${ARGC} GREATER 0)
        SET(CMAKE_REQUIRED_LIBRARIES ${ARGN})
    endif()
    CHECK_FUNCTION_EXISTS(${FUNC} RESULT_VAR)
    set(${RES_VAR} ${RESULT_VAR} PARENT_SCOPE)
    message(STATUS "Checking if ${FUNC} exists .. ${RESULT_VAR}")
endfunction()